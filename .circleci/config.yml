version: 2.1

jobs:
  compile-linux-community:
    machine:
      image: ubuntu-2004:202201-02
    resource_class: large
    environment:
      SCCACHE_BUCKET:
      # AWS_ACCESS_KEY_ID: bar
      # AWS_SECRET_ACCESS_KEY: baz
    steps:
      - run:
          name: Install required software
          command: |
            sudo apt-get update
            sudo apt-get install libssl-dev gcc-10 g++-10 snapd ccache flex bison
      - checkout
      - restore_cache:
          keys:
            - ccache-v1-{{ .Branch }}-{{ .Revision }}
            - ccache-v1-{{ .Branch }}-
            - ccache-v1-
      - run:
          name: Zero CCache Statistics
          command: ccache -z
      - run:
          name: Create build directories
          command: |
            mkdir -p build
      - run:
          name: Configure
          command: |
            cd build
            cmake .. -DUSE_SEPARATE_REPLICATION2_TESTS_BINARY=On -DUSE_MAINTAINER_MODE=On -DCMAKE_C_COMPILER=/usr/bin/gcc-10 -DCMAKE_CXX_COMPILER=/usr/bin/g++-10
      # -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_C_COMPILER_LAUNCHER=ccache
      - run:
          name: Build
          command: |
            cd build
            cmake --build . --target arangodbtests_replication2 -- -j $(nproc)
      - run:
          name: CCache Statistics
          command: ccache -s
      - store_artifacts:
          path: build/bin
      - save_cache:
          key: ccache-v1-{{ .Branch }}-{{ .Revision }}
          paths:
            - /home/circleci/.ccache
      - persist_to_workspace:
          root: .
          paths:
            - build/bin
            - scripts/
            - js/
            - tests/js
            - utils
            - UnitTest

  replication-2.0-gtest:
    machine:
      image: ubuntu-2004:202201-02
    resource_class: small
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Run GTest
          command: |
            build/bin/arangodbtests_replication2 > gtest-output.txt
      - store_test_results:
          path: gtest-output.txt


workflows:
  replication-2.0-pr:
    jobs:
      - compile-linux-community
      - replication-2.0-gtest:
          requires:
            - compile-linux-community
